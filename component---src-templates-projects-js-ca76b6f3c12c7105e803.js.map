{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/assign/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack:///./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack:///./node_modules/date-fns/esm/parse/index.js","webpack:///./src/templates/Projects.js","webpack:///./node_modules/date-fns/esm/compareAsc/index.js"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","Object","prototype","toString","call","array","predicate","key","length","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","NaN","isNaN","Math","ceil","floor","requiredArgs","required","TypeError","toDate","argument","arguments","argStr","Date","getTime","console","warn","Error","stack","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","subMilliseconds","target","dirtyObject","property","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","RangeError","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","setUTCFullYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","startOfUTCISOWeek","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","getUTCISOWeek","round","startOfUTCWeekYear","firstWeek","getUTCWeek","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","hours","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","concat","fullToken","push","cleanEscapedString","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","utcDate","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","input","Project","title","desc","path","coverimg","tags","className","to","id","fluid","childImageSharp","objectFit","style","height","maxHeight","tag","toUpperCase","pageQuery","edges","data","allMarkdownRemark","lineHeight","resultA","node","frontmatter","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","compareAsc","item"],"mappings":"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","file":"component---src-templates-projects-js-ca76b6f3c12c7105e803.js","sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function parse(string, token, _match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport parse from \"date-fns/parse\"\nimport compareAsc from \"date-fns/compareAsc\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const Project = ({ title, desc, path, coverimg, tags }) => (\n  <div className=\"col-xs-12 col-sm-6 pad-5-b\">\n    <Link to={path} className=\"link \" id=\"path\">\n      <div className=\"grow row\">\n        <div className=\"col-xs-12 col-md-6  margin-3-t\">\n          <Img\n            fluid={coverimg.childImageSharp.fluid}\n            className=\"shadow\"\n            objectFit=\"cover\"\n            style={{ width: \"100%\", height: \"100%\", maxHeight: 220 }}\n          />\n        </div>\n        <div className=\"col-xs-12 col-md-6  margin-3-t is-grey\">\n          <h2 className=\"margin-1-b margin-0-t\">{title}</h2>\n          <p className=\"margin-0-t margin-1-b\">{desc}</p>\n          <div className=\"flex flex-wrap\">\n            {tags.map((tag) => (\n              <p className=\"project-tag margin-1-tb margin-1-r\">{tag.toUpperCase()}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Link>\n  </div>\n)\n\nexport default ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  let { edges } = data.allMarkdownRemark // data.markdownRemark holds our post data\n\n  return (\n    <Layout>\n      <SEO title={\"Projects\"} />\n\n      <div className=\"is-grey pad-5-t container-small row \">\n        <div className=\"col-xs-12 pad-3-lr\">\n          <h3 className=\"margin-0-b margin-1-l\" style={{ lineHeight: 1.5 }}>\n            PROJECTS\n          </h3>\n        </div>\n\n        <div className=\"row\">\n          {edges\n            .sort((a, b) => {\n              var resultA = parse(\n                a.node.frontmatter.date,\n                \"yyyy-MM-dd\",\n                new Date()\n              )\n              var resultB = parse(\n                b.node.frontmatter.date,\n                \"yyyy-MM-dd\",\n                new Date()\n              )\n              return compareAsc(resultB, resultA)\n            })\n            .map((item) => (\n              <Project\n                {...item.node.frontmatter}\n                key={item.node.frontmatter.title}\n              />\n            ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Projects {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"Project\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            type\n            title\n            desc\n            date\n            path\n            coverimg {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}"],"sourceRoot":""}