{"version":3,"sources":["webpack:///./src/templates/Articles.js"],"names":["Article","title","desc","path","timeToRead","to","className","id","Articles","edges","data","allMarkdownRemark","years","sort","a","b","node","frontmatter","year","reduce","acc","curr","idx","findIndex","item","count","push","articlesToDisplay","filter","edge","description","map","pageQuery"],"mappings":"4FAAA,sJAKMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,WAAtB,OACd,kBAAC,OAAD,CAAMC,GAAIF,EAAMG,UAAU,mBAAmBC,GAAG,QAC9C,yBAAKD,UAAU,QACb,wBAAIA,UAAU,yBAAyBL,GACvC,wBAAIK,UAAU,yBAAyBJ,GACvC,wBAAII,UAAU,4BAA+BF,EAA7C,oBAIS,SAASI,EAAT,GAEX,IACIC,EADL,EADDC,KAEqBC,kBAAfF,MAIAG,GAHNH,EAAQA,EAAMI,MACZ,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,KAAKC,YAAYC,KAAOJ,EAAEE,KAAKC,YAAYC,SAErCC,QAAO,SAACC,EAAKC,GAC/B,IAAMH,EAAOG,EAAKL,KAAKC,YAAYC,KAC7BI,EAAMF,EAAIG,WAAU,SAAAC,GAAI,OAAIA,EAAKN,OAASA,KAMhD,OALII,GAAO,EACTF,EAAIE,GAAKG,MAAQL,EAAIE,GAAKG,MAAQ,EAElCL,EAAIM,KAAK,CAAER,OAAMO,MAAO,IAEnBL,IACN,IAEGO,EAAoBlB,EAAMmB,QAC9B,SAAAC,GAAI,OAAIA,EAAKb,KAAKC,YAAYC,KAAO,OAEvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjB,MAAM,WACN6B,YAAY,0FAEd,yBAAKxB,UAAU,mCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,2BAAd,4CACA,yBAAKA,UAAU,iCAEjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,OACZM,EAAMmB,KAAI,SAAAP,GAAI,OACb,yBAAKlB,UAAU,8BAA8BC,GAAIiB,EAAKN,MACpD,wBACEZ,UAAU,cACPkB,EAAKN,KAFV,KAEmBM,EAAKC,MAFxB,WAkBR,yBAAKnB,UAAU,uBACZqB,EAAkBI,KAAI,SAAAP,GAAI,OACzB,kBAACxB,EAAD,iBACMwB,EAAKR,KAAKC,YADhB,CAEEb,WAAYoB,EAAKR,KAAKZ,qBAU/B,IAAM4B,EAAS","file":"component---src-templates-articles-js-7f84f8fff5273844af74.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Article = ({ title, desc, path, timeToRead }) => (\n  <Link to={path} className=\"link margin-15-b\" id=\"path\">\n    <div className=\"grow\">\n      <h1 className=\"margin-3-b margin-0-t\">{title}</h1>\n      <h3 className=\"margin-0-t margin-1-b\">{desc}</h3>\n      <h4 className=\"is-light-blue margin-0-t\">{`${timeToRead} minute read.`}</h4>\n    </div>\n  </Link>\n)\nexport default function Articles({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  let { edges } = data.allMarkdownRemark // data.markdownRemark holds our post data\n  edges = edges.sort(\n    (a, b) => b.node.frontmatter.year - a.node.frontmatter.year\n  )\n  const years = edges.reduce((acc, curr) => {\n    const year = curr.node.frontmatter.year\n    const idx = acc.findIndex(item => item.year === year)\n    if (idx > -1) {\n      acc[idx].count = acc[idx].count + 1\n    } else {\n      acc.push({ year, count: 1 })\n    }\n    return acc\n  }, [])\n\n  const articlesToDisplay = edges.filter(\n    edge => edge.node.frontmatter.year > 2000\n  )\n  return (\n    <Layout>\n      <SEO\n        title=\"Articles\"\n        description=\"✍️ For the times I write something other than code. I hope you find something useful!\"\n      />\n      <div className=\"is-grey is-light-grey-bg pad-10\">\n        <div className=\"row container \">\n          <div className=\"col-xs-12 \">\n            <h1 className=\"is-hero-menu margin-0-t\">For when I do something other than code.</h1>\n            <div className=\"line margin-3-t margin-10-b\" />\n          </div>\n          <div className=\"col-xs-12 col-md-2\">\n            <div className=\"row\">\n              {years.map(item => (\n                <div className=\"col-xs-4 col-sm-3 col-md-12\" id={item.year}>\n                  <h4\n                    className=\"margin-0-t\"\n                  >{`${item.year} (${item.count})`}</h4>\n                </div>\n              ))}\n              {/* <div className=\"col-xs-4 col-sm-3 col-md-12\" id=\"rss-feed\">\n                <a\n                  href=\"/rss.xml\"\n                  target=\"_blank\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <h4 className={`margin-0-t link is-orange-always`}>\n                    RSS Feed\n                  </h4>\n                </a>\n              </div> */}\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-md-10\">\n            {articlesToDisplay.map(item => (\n              <Article\n                {...item.node.frontmatter}\n                timeToRead={item.node.timeToRead}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Articles {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { type: { eq: \"Article\" } } }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            type\n            title\n            desc\n            year\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}