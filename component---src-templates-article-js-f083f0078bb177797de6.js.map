{"version":3,"sources":["webpack:///./src/templates/Article.js"],"names":["QandATemplate","markdownRemark","data","frontmatter","html","title","className","to","desc","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"4FAAA,sJAKe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAYE,QACxB,yBAAKC,UAAU,4BACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,+BACb,kBAAC,OAAD,CAAMC,GAAG,YAAYD,UAAU,QAC7B,wBAAIA,UAAU,oCAAd,gBAGJ,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,qDACXH,EAAYE,OAEf,wBAAIC,UAAU,+BAA+BH,EAAYK,MACzD,yBAAKF,UAAU,+BACf,yBACEA,UAAcF,EAAO,wBAA0B,GAC/CK,wBAAyB,CAAEC,OAAQN,SAS1C,IAAMO,EAAS","file":"component---src-templates-article-js-f083f0078bb177797de6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function QandATemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"is-grey is-light-grey-bg\">\n        <div className=\"row container pad-10-t \">\n          <div className=\"col-xs-12 pad-10-l pad-10-r\">\n            <Link to=\"/articles\" className=\"link\">\n              <h2 className=\"is-grey margin-0 margin-2-b grow\">{`< Articles`}</h2>\n            </Link>\n          </div>\n          <div className=\"col-xs-12 pad-10-l pad-10-r\">\n            <h1 className=\"is-hero-menu is-pink-always margin-1-t margin-5-b\">\n              {frontmatter.title}\n            </h1>\n            <h6 className=\"is-hero-sub-text margin-3-b\">{frontmatter.desc}</h6>\n            <div className=\"line margin-5-t margin-5-b\" />\n            <div\n              className={`${html ? \"pad-10-b lato article\" : \"\"}`}\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        desc\n      }\n    }\n  }\n`\n"],"sourceRoot":""}