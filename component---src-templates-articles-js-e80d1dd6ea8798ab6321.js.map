{"version":3,"sources":["webpack:///./src/templates/Articles.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find-index.js"],"names":["Article","title","desc","path","timeToRead","to","className","id","Articles","data","useState","Date","getFullYear","year","setYear","edges","allMarkdownRemark","years","sort","a","b","node","frontmatter","reduce","acc","curr","idx","findIndex","item","count","push","articlesToDisplay","filter","edge","description","map","onClick","pageQuery","$export","$find","KEY","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"+QAKMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,WAAtB,OACd,kBAAC,OAAD,CAAMC,GAAIF,EAAMG,UAAU,mBAAmBC,GAAG,QAC9C,yBAAKD,UAAU,QACb,wBAAIA,UAAU,yBAAyBL,GACvC,wBAAIK,UAAU,yBAAyBJ,GACvC,wBAAII,UAAU,4BAA+BF,EAA7C,oBAIS,SAASI,EAAT,GAEX,IADFC,EACC,EADDA,KACC,EACuBC,oBAAS,IAAIC,MAAOC,eAArCC,EADN,KACYC,EADZ,KAEKC,EAAUN,EAAKO,kBAAfD,MAIAE,GAHNF,EAAQA,EAAMG,MACZ,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,KAAKC,YAAYT,KAAOM,EAAEE,KAAKC,YAAYT,SAErCU,QAAO,SAACC,EAAKC,GAC/B,IAAMZ,EAAOY,EAAKJ,KAAKC,YAAYT,KAC7Ba,EAAMF,EAAIG,WAAU,SAAAC,GAAI,OAAIA,EAAKf,OAASA,KAMhD,OALIa,GAAO,EACTF,EAAIE,GAAKG,MAAQL,EAAIE,GAAKG,MAAQ,EAElCL,EAAIM,KAAK,CAAEjB,OAAMgB,MAAO,IAEnBL,IACN,IAEGO,EAAoBhB,EAAMiB,QAC9B,SAAAC,GAAI,OAAIA,EAAKZ,KAAKC,YAAYT,OAASA,KAEzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,MAAM,WACNiC,YAAY,yFAEd,yBAAK5B,UAAU,mCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,kBAAC,OAAD,CAAMD,GAAG,IAAIC,UAAU,QACrB,wBAAIA,UAAU,oCAAd,YAGJ,yBAAKA,UAAU,cACb,wBAAIA,UAAU,2BAAd,mDACA,yBAAKA,UAAU,iCAEjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,OACZW,EAAMkB,KAAI,SAAAP,GAAI,OACb,yBAAKtB,UAAU,8BAA8BC,GAAIqB,EAAKf,MACpD,4BAAQuB,QAAS,kBAAMtB,EAAQc,EAAKf,QAClC,wBACEP,UAAS,eACPsB,EAAKf,OAASA,EAAO,iBAAmB,YAEvCe,EAAKf,KAJV,KAImBe,EAAKC,MAJxB,YAqBV,yBAAKvB,UAAU,uBACZyB,EAAkBI,KAAI,SAAAP,GAAI,OACzB,kBAAC5B,EAAD,iBACM4B,EAAKP,KAAKC,YADhB,CAEElB,WAAYwB,EAAKP,KAAKjB,qBAU/B,IAAMiC,EAAS,c,kCC3FtB,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GACpCC,EAAM,YACNC,GAAS,EAETD,IAAO,IAAIE,MAAM,GAAGF,IAAK,WAAcC,GAAS,KACpDH,EAAQA,EAAQK,EAAIL,EAAQM,EAAIH,EAAQ,QAAS,CAC/Cd,UAAW,SAAmBkB,GAC5B,OAAON,EAAMO,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,OAAR,CAAiCT","file":"component---src-templates-articles-js-e80d1dd6ea8798ab6321.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Article = ({ title, desc, path, timeToRead }) => (\n  <Link to={path} className=\"link margin-15-b\" id=\"path\">\n    <div className=\"grow\">\n      <h1 className=\"margin-3-b margin-0-t\">{title}</h1>\n      <h3 className=\"margin-0-t margin-1-b\">{desc}</h3>\n      <h4 className=\"is-light-blue margin-0-t\">{`${timeToRead} minute read.`}</h4>\n    </div>\n  </Link>\n)\nexport default function Articles({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const [year, setYear] = useState(new Date().getFullYear())\n  let { edges } = data.allMarkdownRemark // data.markdownRemark holds our post data\n  edges = edges.sort(\n    (a, b) => b.node.frontmatter.year - a.node.frontmatter.year\n  )\n  const years = edges.reduce((acc, curr) => {\n    const year = curr.node.frontmatter.year\n    const idx = acc.findIndex(item => item.year === year)\n    if (idx > -1) {\n      acc[idx].count = acc[idx].count + 1\n    } else {\n      acc.push({ year, count: 1 })\n    }\n    return acc\n  }, [])\n\n  const articlesToDisplay = edges.filter(\n    edge => edge.node.frontmatter.year === year\n  )\n  return (\n    <Layout>\n      <SEO\n        title=\"Articles\"\n        description=\"✍️ For the times I write something else than code. I hope you find something useful!\"\n      />\n      <div className=\"is-grey is-light-grey-bg pad-10\">\n        <div className=\"row container \">\n          <div className=\"col-xs-12 \">\n            <Link to=\"/\" className=\"link\">\n              <h2 className=\"is-grey margin-0 margin-2-b grow\">{`< Home`}</h2>\n            </Link>\n          </div>\n          <div className=\"col-xs-12 \">\n            <h1 className=\"is-hero-menu margin-0-t\">For the times I write something else than code.</h1>\n            <div className=\"line margin-3-t margin-10-b\" />\n          </div>\n          <div className=\"col-xs-12 col-md-2\">\n            <div className=\"row\">\n              {years.map(item => (\n                <div className=\"col-xs-4 col-sm-3 col-md-12\" id={item.year}>\n                  <button onClick={() => setYear(item.year)}>\n                    <h4\n                      className={`margin-0-t ${\n                        item.year === year ? \"is-pink-always\" : \"is-grey\"\n                      }`}\n                    >{`${item.year} (${item.count})`}</h4>\n                  </button>\n                </div>\n              ))}\n              {/* <div className=\"col-xs-4 col-sm-3 col-md-12\" id=\"rss-feed\">\n                <a\n                  href=\"/rss.xml\"\n                  target=\"_blank\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <h4 className={`margin-0-t link is-orange-always`}>\n                    RSS Feed\n                  </h4>\n                </a>\n              </div> */}\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-md-10\">\n            {articlesToDisplay.map(item => (\n              <Article\n                {...item.node.frontmatter}\n                timeToRead={item.node.timeToRead}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Articles {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { type: { eq: \"Article\" } } }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            type\n            title\n            desc\n            year\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}